'use strict';

module.exports = function (OCL) {
    var Util = OCL.Util;
    return function getGroupedHOSECodes() {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        var diaIDs = this.getGroupedDiastereotopicAtomIDs(options);
        diaIDs.forEach(function (diaID) {
            var hoses = Util.getHoseCodesFromDiastereotopicID(diaID.oclID, options);

            diaID.hoses = [];
            var level = 1;
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
                for (var _iterator = hoses[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var hose = _step.value;

                    diaID.hoses.push({
                        level: level++,
                        oclID: hose
                    });
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion && _iterator.return) {
                        _iterator.return();
                    }
                } finally {
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }
        });

        return diaIDs;
    };
};